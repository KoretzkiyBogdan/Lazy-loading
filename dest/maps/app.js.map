{"version":3,"sources":["app.js"],"names":["window","Model","apiUrl","apiKey","this","prototype","_GET","path","callback","xhr","XMLHttpRequest","addEventListener","response","JSON","parse","responseText","err","console","error","Error","status","statusText","open","send","getPhotoLinks","params","query","method","api_key","page","per_page","perPage","extras","format","nojsoncallback","queryString","Object","keys","map","key","join","stat","links","photos","photo","url_m","url_o","View","rootElement","imgHeight","container","document","createElement","className","appendChild","onWheel","onKeyDown","selectElement","index","elements","querySelectorAll","i","length","classList","contains","remove","add","scrollToRow","row","animate","multiplier","heightWithMargin","startPosition","parseInt","style","top","replace","finalPosition","currentPosition","perStep","counter","timer","setInterval","clearInterval","bind","render","insertAfter","self","fragment","createDocumentFragment","forEach","link","img","height","src","insertBefore","firstChild","removeElements","count","fromStart","maxIndex","step","Controller","view","model","photosInRow","photoPerPage","availableOffset","photoLinks","selectedElementIndex","_onWheel","_onRequest","initialize","concat","slice","onKeyUp","event","moveSelectElement","deltaY","keyCode","getMorePhotos","newPage","startIndex","endIndex","getCachedPhotos","newPosition","allPhotoLinksLength","maxRows","Math","floor","moveUp","App","secret"],"mappings":"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","file":"../app.js","sourcesContent":["\r\n(function(window) {\r\n\r\n\r\n  /** BASE MODEL **/\r\n\r\n\r\n  var Model = function(apiUrl, apiKey) {\r\n\r\n    this.apiUrl = apiUrl;\r\n    this.apiKey = apiKey;\r\n  };\r\n\r\n\r\n  /**\r\n   * Simple wrapper under XHR\r\n   *\r\n   * @param {String} path\r\n   * @callback\r\n   */\r\n  Model.prototype._GET = function(path, callback) {\r\n\r\n    callback = typeof callback === 'function' ? callback : function() {};\r\n\r\n    var xhr = new XMLHttpRequest();\r\n\r\n    xhr.addEventListener('load', function() {\r\n\r\n      try {\r\n        var response = JSON.parse(this.responseText);\r\n        callback(null, response);\r\n      } catch (err) {\r\n        console.error(err);\r\n        callback(new Error('Non valid JSON'));\r\n      }\r\n    });\r\n\r\n    xhr.addEventListener('error', function() {\r\n\r\n      callback(new Error('Error: ' + (this.status ? this.statusText : 'request failed')));\r\n    });\r\n\r\n    xhr.open('GET', path, true);\r\n\r\n    xhr.send();\r\n  };\r\n\r\n\r\n  /**\r\n   * Returns list of photo src\r\n   *\r\n   * @param {Object} params\r\n   * @param {Number} params.page\r\n   * @param {Number} params.perPage - count of items on one page\r\n   * @callback\r\n   */\r\n  Model.prototype.getPhotoLinks = function(params, callback) {\r\n\r\n    callback = typeof callback === 'function' ? callback : function() {};\r\n\r\n    var query = {\r\n      method: 'flickr.photos.getRecent',\r\n      api_key: this.apiKey,\r\n      page: params ? params.page : 1,\r\n      per_page: params ? params.perPage: 50,\r\n      extras: 'url_o,url_m',\r\n      format: 'json',\r\n      nojsoncallback: 1\r\n    };\r\n\r\n    var queryString = Object.keys(query).map(function(key) {\r\n\r\n      return key + '=' + query[key];\r\n    }).join('&');\r\n\r\n    return this._GET(this.apiUrl + '?' + queryString, function(err, response) {\r\n\r\n      if (!response ||  response.stat !== 'ok') {\r\n        return callback(err);\r\n      }\r\n\r\n      var photo = response && response.photos ? response.photos.photo : [];\r\n\r\n      var links = photo.map(function(photo) {\r\n\r\n        return photo.url_m || photo.url_o;\r\n      });\r\n\r\n      callback(null, links);\r\n    });\r\n  };\r\n\r\n\r\n  /** BASE VIEW **/\r\n\r\n\r\n  var View = function(params) {\r\n\r\n    params = params || {};\r\n\r\n    this.rootElement = params.rootElement;\r\n    this.imgHeight = params.imgHeight || 180;\r\n    this.container = document.createElement('div');\r\n    this.container.className = 'container';\r\n    this.rootElement.appendChild(this.container);\r\n    // Events\r\n    this.onWheel = function() {};\r\n    this.onKeyDown = function() {};\r\n\r\n    this.rootElement.addEventListener('wheel', this.onWheel);\r\n  };\r\n\r\n\r\n  /**\r\n   * It select element on page by index (node number)\r\n   *\r\n   * @param {Number} index\r\n   */\r\n  View.prototype.selectElement = function(index) {\r\n\r\n    var elements = document.querySelectorAll('.photo-container');\r\n\r\n    for (var i = 0; i < elements.length; i++) {\r\n\r\n      if (i !== index && elements[i].classList.contains('active')) {\r\n        elements[i].classList.remove('active');\r\n      }\r\n      if (i === index) {\r\n        elements[i].classList.add('active');\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * Scroll view to the specify row\r\n   *\r\n   * @param {Number} row\r\n   * @param {Boolean} animate - allow to use smooth scroll\r\n   * @callback\r\n   */\r\n  View.prototype.scrollToRow = function(row, animate, callback) {\r\n\r\n    // Scroll on center position;\r\n    var multiplier = row - 1.5;\r\n    // Img height + margin\r\n    var heightWithMargin = this.imgHeight + 44;\r\n    // Get start position from DOM Node\r\n    var startPosition = parseInt(this.container.style.top.replace('px', '') || 0);\r\n    // Set finalpostion as negative height (or zero)\r\n    var finalPosition = row < 2 ? 0 : -(heightWithMargin * multiplier);\r\n    // Use down below in interval\r\n    var currentPosition = startPosition;\r\n\r\n    if (!animate) {\r\n      this.container.style.top = finalPosition + 'px';\r\n      return;\r\n    }\r\n\r\n    var perStep = (finalPosition - startPosition) / 6;\r\n    var counter = 0;\r\n\r\n    var timer = setInterval(function() {\r\n\r\n      if (counter >= 6) {\r\n        typeof callback == 'function' ? callback() : null;\r\n        return clearInterval(timer);\r\n      }\r\n\r\n      currentPosition += perStep;\r\n      this.container.style.top = currentPosition + 'px';\r\n      counter++;\r\n    }.bind(this), 30);\r\n  }\r\n\r\n\r\n  /**\r\n   * It inset new images at start or end of existing images\r\n   *\r\n   * @param {String[]} links\r\n   * @param {Boolean} insertAfter\r\n   */\r\n  View.prototype.render = function(links, insertAfter) {\r\n\r\n    var self = this;\r\n    // Create Node fragment for optimization purposes\r\n    var fragment = document.createDocumentFragment();\r\n\r\n    links.forEach(function(link) {\r\n\r\n      var container = document.createElement('div');\r\n      var img = document.createElement('img');\r\n      container.className = 'photo-container';\r\n      container.style.height = self.imgHeight + 'px';\r\n      img.className = 'photo'\r\n      img.src = link;\r\n      container.appendChild(img)\r\n      fragment.appendChild(container);\r\n    });\r\n\r\n    insertAfter ? this.container.appendChild(fragment): this.container.insertBefore(fragment, this.container.firstChild);\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove existing images from DOM\r\n   *\r\n   * @param {Number} count\r\n   * @param {Boolean} fromStart - allow to choose strategy (from start or end of list)\r\n   */\r\n  View.prototype.removeElements = function(count, fromStart) {\r\n\r\n    var elements = document.querySelectorAll('.photo-container');\r\n    var maxIndex = elements.length - 1;\r\n    var i = fromStart ? 0 : maxIndex;\r\n    var step = fromStart ? 1 : -1;\r\n\r\n    while (fromStart ? i < count : i > (maxIndex - count)) {\r\n      elements[i].remove();\r\n      i += step;\r\n    }\r\n  };\r\n\r\n\r\n  /** BASE CONTROLLER **/\r\n\r\n\r\n  var Controller = function(view, model) {\r\n\r\n    this.view = view;\r\n    this.model = model;\r\n    this.photosInRow = 5;\r\n    this.photoPerPage = 50;\r\n    this.availableOffset = 15;\r\n    this.page = 1;\r\n    this.photoLinks = [];\r\n    this.selectedElementIndex = 0;\r\n    this._onWheel = false;\r\n    this._onRequest = false;\r\n    this.initialize();\r\n  };\r\n\r\n\r\n  /**\r\n   * Init all handkers and get first data\r\n   */\r\n  Controller.prototype.initialize = function() {\r\n\r\n    this.model.getPhotoLinks({ page: this.page, perPage: this.photoPerPage}, function(err, links) {\r\n\r\n      if (err) {\r\n        return err;\r\n      }\r\n\r\n      this.photoLinks = this.photoLinks.concat(links);\r\n      this.view.render(this.photoLinks.slice(-this.photoPerPage), true);\r\n      this.view.selectElement(this.selectedElementIndex);\r\n      this.view.scrollToRow(1);\r\n    }.bind(this));\r\n\r\n    this.view.rootElement.addEventListener('wheel', this.onWheel.bind(this));\r\n    this.view.onWheel = this.onWheel.bind(this);\r\n\r\n    document.addEventListener('keyup', this.onKeyUp.bind(this));\r\n  };\r\n\r\n\r\n  /**\r\n   * Mouse wheel Handler\r\n   *\r\n   * @param {Object} event - Standart DOM Node event\r\n   */\r\n  Controller.prototype.onWheel = function(event) {\r\n\r\n    // If it already wait - do nothing\r\n    if (this._onWheel) {\r\n      return false;\r\n    }\r\n\r\n    this._onWheel = true;\r\n\r\n    this.moveSelectElement(event.deltaY > 0 ? this.photosInRow : -this.photosInRow, function() {\r\n\r\n      this._onWheel = false;\r\n    }.bind(this));\r\n  };\r\n\r\n\r\n  /**\r\n   * KeyBoard Handler\r\n   *\r\n   * @param {Object} event - Standart DOM Node event\r\n   */\r\n  Controller.prototype.onKeyUp = function(event) {\r\n\r\n    switch (event.keyCode) {\r\n    // left arrow\r\n    case 37:\r\n      this.moveSelectElement(-1);\r\n      break;\r\n    // up arrow\r\n    case 38:\r\n      this.moveSelectElement(-this.photosInRow);\r\n      break;\r\n    // right arrow\r\n    case 39:\r\n      this.moveSelectElement(1);\r\n      break;\r\n    // down arrow\r\n    case 40:\r\n      this.moveSelectElement(this.photosInRow);\r\n      break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Load extra photo\r\n   */\r\n  Controller.prototype.getMorePhotos = function() {\r\n\r\n    // If it already working - do nothing\r\n    if (this._onRequest) {\r\n      return;\r\n    }\r\n\r\n    var newPage = this.page + 1;\r\n\r\n    var startIndex = this.page * this.photoPerPage;\r\n    var endIndex = startIndex + (this.photoPerPage - this.availableOffset);\r\n\r\n    // Check chache\r\n    if (endIndex < this.photoLinks.length) {\r\n\r\n      this.selectedElementIndex = (this.selectedElementIndex % this.photosInRow) + this.photosInRow;\r\n      this.view.removeElements(this.photoPerPage - this.availableOffset, true);\r\n      this.view.render(this.photoLinks.slice(startIndex, endIndex), true);\r\n      this.view.selectElement(this.selectedElementIndex);\r\n      this.view.scrollToRow(2);\r\n      this.page = newPage;\r\n      return;\r\n    }\r\n\r\n    this._onRequest = true;\r\n\r\n    this.model.getPhotoLinks({ page: newPage, perPage: this.photoPerPage }, function(err, links) {\r\n\r\n      this._onRequest = false;\r\n\r\n      if (err) {\r\n        return err;\r\n      }\r\n\r\n      this.page = newPage;\r\n      this.photoLinks = this.photoLinks.concat(links);\r\n      this.selectedElementIndex = (this.selectedElementIndex % this.photosInRow) + this.photosInRow;\r\n      this.view.removeElements(this.photoPerPage - this.availableOffset, true);\r\n      this.view.render(this.photoLinks.slice(startIndex, endIndex), true);\r\n      this.view.selectElement(this.selectedElementIndex);\r\n      this.view.scrollToRow(2);\r\n    }.bind(this));\r\n  };\r\n\r\n\r\n  /**\r\n   * Get photos from photoLinks property\r\n   */\r\n  Controller.prototype.getCachedPhotos = function() {\r\n\r\n    var newPage = this.page - 1;\r\n    var startIndex = (newPage - 1) * this.photoPerPage;\r\n    var endIndex = startIndex + (this.photoPerPage - this.availableOffset);\r\n\r\n    this.selectedElementIndex = (this.selectedElementIndex % this.photosInRow) + (this.photoPerPage - this.availableOffset);\r\n\r\n    this.view.removeElements(this.photoPerPage - this.availableOffset, false);\r\n    this.view.render(this.photoLinks.slice(startIndex, endIndex), false);\r\n    this.view.selectElement(this.selectedElementIndex);\r\n    this.view.scrollToRow(8);\r\n    this.page = newPage;\r\n  };\r\n\r\n\r\n  /**\r\n   * Move selection element by step\r\n   *\r\n   * @param {Number} step\r\n   * @callback\r\n   */\r\n  Controller.prototype.moveSelectElement = function(step, callback) {\r\n\r\n    // If it permorm http (getting new photos) - do nothing\r\n    if (this._onRequest) {\r\n      return;\r\n    }\r\n\r\n    var self = this;\r\n    var newPosition = this.selectedElementIndex + step;\r\n    var allPhotoLinksLength = this.photoLinks.length;\r\n    var maxRows = Math.floor(this.photoPerPage / this.photosInRow);\r\n    // Count current row (start from one)\r\n    var row = Math.floor(newPosition / this.photosInRow) + 1;\r\n    // Calculate old and new row number and setup current moving direction\r\n    var moveUp = row - (Math.floor(this.selectedElementIndex / this.photosInRow) + 1) === -1;\r\n\r\n    if (newPosition < 0) {\r\n      return;\r\n    }\r\n\r\n    if (newPosition <= (allPhotoLinksLength - 1)) {\r\n      this.selectedElementIndex = newPosition;\n      this.view.selectElement(this.selectedElementIndex);\r\n      this.view.scrollToRow(row, true, function() {\r\n\r\n        // If it's pre last row\r\n        if (row + 1 === maxRows) {\r\n          self.getMorePhotos();\r\n          // if first row, but we have some cache\r\n        } else if (moveUp && row === 1 && self.page !== 1) {\r\n          self.getCachedPhotos();\r\n        }\r\n        typeof callback === 'function' ? callback() : null;\r\n      });\r\n    }\r\n  };\r\n\r\n  window.App = function(params) {\r\n\r\n    params = params || {};\r\n\r\n    var model = new Model(params.apiUrl, params.secret);\r\n    var view = new View({\r\n      rootElement: params.rootElement,\r\n      imgHeight: params.imgHeight\r\n    });\r\n    return new Controller(view, model);\r\n  };\r\n\r\n})(window);\r\n"]}